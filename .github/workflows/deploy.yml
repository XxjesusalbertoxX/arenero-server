name: Deploy to EC2 using GitHub Secrets

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: mishistema-production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e  # Detener si hay error

            # Verificar si Docker está instalado
            if ! command -v docker &> /dev/null; then
              echo "Instalando Docker..."
              sudo dnf update -y
              sudo dnf install -y docker
              sudo systemctl start docker
              sudo systemctl enable docker
            fi

            cd arenero-server/DOCKER/infraestructure/

            # Crear el archivo .env automáticamente
            cat <<EOF > .env
            EMQX_MQTT_PORT=${{ vars.EMQX_MQTT_PORT }}
            EMQX_MQTT_WEBSOCKET_PORT=${{ vars.EMQX_MQTT_WEBSOCKET_PORT }}
            EMQX_API_REST=${{ vars.EMQX_API_REST }}
            EMQX_DASHBOARD_PORT=${{ vars.EMQX_DASHBOARD_PORT }}
            EMQX_NODE_COOKIE=${{ secrets.EMQX_NODE_COOKIE }}
            RABBITMQ_ERLANG_COOKIE=${{ secrets.RABBITMQ_ERLANG_COOKIE }}
            RABBITMQ_DEFAULT_USER=${{ secrets.RABBITMQ_DEFAULT_USER }}
            RABBITMQ_DEFAULT_PASS=${{ secrets.RABBITMQ_DEFAULT_PASS }}
            DB_MISHISTEMA_USER=${{ secrets.DB_MISHISTEMA_USER }}
            DB_MISHISTEMA_PASSWORD=${{ secrets.DB_MISHISTEMA_PASSWORD }}
            DB_MISHSISTEMA_NAME=${{ secrets.DB_MISHSISTEMA_NAME }}
            DB_MISHISTEMA_PORT=${{ vars.DB_MISHISTEMA_PORT }}
            RABBITMQ_DASHBOARD_PORT=${{ vars.RABBITMQ_DASHBOARD_PORT }}
            RABBITMQ_AMQP_PORT=${{ vars.RABBITMQ_AMQP_PORT }}
            EOF

            # Asegurar permisos del .env
            sudo chmod 600 .env

            # Descargar imágenes y levantar contenedores con el .env
            sudo docker-compose pull
            sudo docker-compose up -d --remove-orphans
