name: Deploy to EC2 using GitHub Secrets

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: mishistema-production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e  # Detener si hay error

            echo "üîÑ Actualizando sistema a la √∫ltima versi√≥n..."
            sudo dnf upgrade --releasever=2023.6.20250303 -y

            echo "üê≥ Instalando Docker y habilit√°ndolo..."
            sudo dnf install -y docker
            sudo systemctl enable --now docker

            echo "üîß Instalando complementos de DNF..."
            sudo dnf install dnf-plugins-core -y

            echo "üìö A√±adiendo repositorio de Docker CE..."
            sudo dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

            echo "‚¨áÔ∏è Instalando Docker Compose v2.12.2..."
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.12.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            sudo docker-compose --version

            echo "üíª Instalando Git..."
            sudo dnf install git -y

            echo "‚¨áÔ∏è Instalando Node.js 18 y npm 11.2.0..."
            curl -fsSL https://rpm.nodesource.com/setup_18.x | sudo bash -
            sudo dnf install -y nodejs

            echo "üîê Configurando Git..."
            sudo git config --global user.name "XxjesusalbertoxX"
            sudo git config --global user.email "villarrealperezjesusalberto@gmail.com"

            echo "üì¶ Clonando el repositorio arenero-server..."
            if [ ! -d "arenero-server" ]; then
              sudo git clone https://github.com/XxjesusalbertoxX/mishistema-server.git
            else
              echo "‚úÖ El repositorio ya est√° clonado."
            fi

            echo "üõ†Ô∏è Configurando permisos del repositorio..."
            sudo chown -R $USER:$USER arenero-server
            sudo chmod -R 755 arenero-server/DOCKER/infraestructure/

            echo "‚úÖ Cambiando a directorio ra√≠z del repositorio..."
            cd arenero-server

            # Verificar si Docker est√° instalado
            if ! command -v docker &> /dev/null; then
              echo "‚ùå Docker no est√° instalado correctamente. Abortando."
              exit 1
            fi

            echo "‚úÖ Instalando dependencias de API Gateway..."
            cd infraestructure/api-gateway/
            
            echo "‚úÖ Generando archivo .env de apigateway..."
            cat <<EOF > .env
            APIGATEWAY_PORT==${{ vars.APIGATEWAY_PORT }}
            AUTH_SERVICE_ENDPOINT="http://${{ vars.EC2_SEBASTIAN_HOST }}:${{ vars.AUTH_SERVICE_PORT }}"
            EOF

            echo "‚úÖ Asegurando permisos de .env"
            sudo chmod 600 .env

            sudo npm install
            cd -

            echo "‚úÖ Instalando dependencias de WebSocket..."
            cd infraestructure/websocket/
            sudo npm install
            cd -

            echo "‚úÖ Generando archivo .env..."
            cd DOCKER/infraestructure/

            cat <<EOF > .env
            EMQX_MQTT_PORT=${{ vars.EMQX_MQTT_PORT }}
            EMQX_MQTT_WEBSOCKET_PORT=${{ vars.EMQX_MQTT_WEBSOCKET_PORT }}
            EMQX_API_REST=${{ vars.EMQX_API_REST }}
            EMQX_DASHBOARD_PORT=${{ vars.EMQX_DASHBOARD_PORT }}
            EMQX_NODE_COOKIE=${{ secrets.EMQX_NODE_COOKIE }}
            RABBITMQ_ERLANG_COOKIE=${{ secrets.RABBITMQ_ERLANG_COOKIE }}
            RABBITMQ_DEFAULT_USER=${{ secrets.RABBITMQ_DEFAULT_USER }}
            RABBITMQ_DEFAULT_PASS=${{ secrets.RABBITMQ_DEFAULT_PASS }}
            DB_MISHISTEMA_USER=${{ secrets.DB_MISHISTEMA_USER }}
            DB_MISHISTEMA_PASSWORD=${{ secrets.DB_MISHISTEMA_PASSWORD }}
            DB_MISHSISTEMA_NAME=${{ secrets.DB_MISHSISTEMA_NAME }}
            DB_MISHISTEMA_PORT=${{ vars.DB_MISHISTEMA_PORT }}
            RABBITMQ_DASHBOARD_PORT=${{ vars.RABBITMQ_DASHBOARD_PORT }}
            RABBITMQ_AMQP_PORT=${{ vars.RABBITMQ_AMQP_PORT }}
            EOF

            echo "‚úÖ Asegurando permisos de .env"
            sudo chmod 600 .env

            echo "üîÑ Actualizando contenedores Docker..."
            sudo docker-compose pull
            sudo docker-compose up -d --remove-orphans
